1
00:00:00,650 --> 00:00:06,320
Many applications come with an introduction and we can see here there's this library called Riak native

2
00:00:06,380 --> 00:00:12,770
app intro that allows you to build out introductory animation screens.

3
00:00:12,770 --> 00:00:13,500
This is great.

4
00:00:13,520 --> 00:00:20,300
However if you don't understand the animations behind what's happening it may be slightly confusing.

5
00:00:20,300 --> 00:00:23,440
So let's take a look at what we are going to build.

6
00:00:23,870 --> 00:00:29,870
Rather than focusing on all sorts of different types of screens we're going to use the same three icons

7
00:00:30,200 --> 00:00:32,300
as we say swipe through our screens.

8
00:00:32,510 --> 00:00:40,730
So if you look here we can see that while we drag that this seems to be moving quicker than these others.

9
00:00:40,910 --> 00:00:45,770
As we drag to the right and come back it seems to be moving left and right so we know that there's going

10
00:00:45,770 --> 00:00:54,300
to be some sort of translate in a negative direction this way as we move our scroll view.

11
00:00:54,450 --> 00:01:00,450
And because we are using a scroll of view and know that we're going to access the on scroll probably

12
00:01:00,450 --> 00:01:05,540
with animated events and getting the content offset X..

13
00:01:05,580 --> 00:01:10,440
Once we know that we're animating with the content offset we know that we're going to be building our

14
00:01:10,440 --> 00:01:17,930
interpretations based upon the screen with our input range will be from here to here.

15
00:01:18,030 --> 00:01:23,190
And then also if we want to do other different types of animations we might define different entries

16
00:01:23,350 --> 00:01:28,800
while we are moving from either a left hand side or right hand side from the next screen and we'll take

17
00:01:28,800 --> 00:01:30,540
a look at what that is right here.

18
00:01:30,660 --> 00:01:42,040
So if we anime into the next screen from the left side we can see that this faded in and moved moved

19
00:01:42,190 --> 00:01:44,170
from the bottom up.

20
00:01:44,170 --> 00:01:51,300
Now when we transition onto the next screen you can see that we can define different animations based

21
00:01:51,300 --> 00:01:58,350
upon the way that you're scrolling and that is now moving up and fading out.

22
00:02:00,340 --> 00:02:06,160
Now for this animation you can see that a scale and rotate is happening.

23
00:02:06,160 --> 00:02:13,630
Now we can see that it moves from a starting position of a small scale for both of the main image and

24
00:02:13,630 --> 00:02:18,830
the floating image there and scales up and rotates into position.

25
00:02:20,800 --> 00:02:29,320
When we get to the end of a scroll of view in iOS there is always a bounce that can potentially happen.

26
00:02:29,320 --> 00:02:34,930
And if we think about doing an interpellation you must always think of.

27
00:02:34,930 --> 00:02:44,130
Extrapolate now the default to extrapolate is extend and if we extend our animation be beyond what we

28
00:02:44,130 --> 00:02:50,880
might have defined we would expect the animation to continue and because we are going from a small scale

29
00:02:51,120 --> 00:02:59,340
to a larger scale and the content OFSAA is increasing then if we didn't define a secondary transition

30
00:02:59,850 --> 00:03:08,100
then this sort of domain image and the other image would grow larger on the scale however they are growing

31
00:03:08,100 --> 00:03:15,960
smaller so we know that there is a separate animation defined or separate extended input range to an

32
00:03:15,990 --> 00:03:18,630
output range to handle this bounce here.

